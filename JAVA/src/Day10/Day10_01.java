package Day10;

public class Day10_01 {
	//p338
		// 1. 1 [다중 상속 X 다중 부모 X]
		// 2. 2 [항상 x]
		// 3. 1 [final class 는 상속 불가]
		// 4. 4 [protected 패키지가 재정의 가능/ default가 불가능]
		// 5. 부모클래스와 자식 클래스 간 생성자를 동일
			// 1.this.name =name => super(name);
			// 2.부모클래스 내 빈 생성자 만들기
		// 6. 자식클래스가 메모리 할당을 하면[객체 생성] 부모 클래스 내 생성자 호출이 우선
			// this.필드명: 현 클래스 내 필드 호출
			// this.메소드명() : 현 클래스 내 메소드 호출
			// this(): 현 클래스 내 생성자 호출
			// super.필드명 : 부모 클래스 내 필드 호출
			// super.메소드명() : 부모 클래스 내 메소드 호출
			// super() : 부모 클래스내 생성자 호출
				//	1. 자식 클래스 내 기본 생성자 호출 -> 출력4
						//	2. 부모 클래스 내 기본 생성자 호출-> 출력2
							//	3. 부모 클래스 내 [1개인수] 생성자 호출 ->출력1
					//	4. 자식 클래스 내 [1개인수] 생성자 호출 ->출력3
		//	7. 
				// 자식클래스 자식객체명= new 자식생성자();
				// 부모클래스 부모객체명 = 자식객체명;
					//	1st: 스노우 타이어가 굴러갑니다.	자식객체명.run()
						// 오버라이딩 했기 때문에
					//  2nd: 스노우 타이어가 굴러갑니다.	부모객체명.run()=> 형변환
						// 자식이 부모로 타입변환 했기 때문에
		//	8. 
				//	2 : 강제 형 변환 가능하나 문법이 틀림
					// new 앞에 강제 형변환 불가능
					// (B) new A() : X
					//	A a = new A(); 설정 뒤 B b = (B) A;
	
	public static void main(String[] args) {
		Child2 child = new Child2();
	}
}
